{"version":3,"sources":["component/login.js","component/singup.js","container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Login","handleChange","btnstyle","margin","validationSchema","Yup","shape","username","email","required","password","Grid","Paper","style","padding","height","width","align","Avatar","backgroundColor","initialValues","remember","onSubmit","values","props","console","log","setTimeout","resetForm","setSubmitting","as","TextField","name","label","placeholder","helperText","fullWidth","type","FormControlLabel","control","Checkbox","color","Button","variant","disabled","isSubmitting","Typography","Link","href","onClick","Singup","FormControl","component","marginTop","FormLabel","RadioGroup","aria-label","display","value","Radio","SignInOutContainer","useState","setValue","event","newValue","TabPanel","children","index","other","role","hidden","id","aria-labelledby","Box","elevation","Tabs","indicatorColor","textColor","onChange","Tab","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ae9127e.chunk.js","sourcesContent":["import {\r\n  Avatar,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  Link,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst Login = ({ handleChange }) => {\r\n  const paperStyle = {\r\n    padding: 20,\r\n    height: \"77vh\",\r\n    width: 300,\r\n    margin: \"0 auto\",\r\n  };\r\n  const avatarStyle = { backgroundColor: \"#22d222\" };\r\n  const btnstyle = { margin: \"8px 0\" };\r\n  const initialValues = {\r\n    username: \"\",\r\n    password: \"\",\r\n    remember: false,\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n      .email(\"please enter valid email\")\r\n      .required(\"Required\"),\r\n    password: Yup.string().required(\"Required\"),\r\n  });\r\n  const onSubmit = (values, props) => {\r\n    console.log(props);\r\n    setTimeout(() => {\r\n      props.resetForm();\r\n      props.setSubmitting(false);\r\n    }, 2000);\r\n\r\n    console.log(values);\r\n  };\r\n  return (\r\n    <Grid>\r\n      <Paper style={paperStyle}>\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <h2>Sing In </h2>\r\n        </Grid>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={onSubmit}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {(props) => (\r\n            <Form>\r\n              <Field\r\n                as={TextField}\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                placeholder=\"Enter Username\"\r\n                helperText={<ErrorMessage name=\"username\" />}\r\n                fullWidth\r\n                required\r\n              />\r\n              <Field\r\n                as={TextField}\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                helperText={<ErrorMessage name=\"password\" />}\r\n                fullWidth\r\n                required\r\n              />\r\n              <Field\r\n                as={FormControlLabel}\r\n                name=\"remember\"\r\n                control={<Checkbox color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={btnstyle}\r\n                fullWidth\r\n                disabled={props.isSubmitting}\r\n              >\r\n                {props.isSubmitting ? \"Loading\" : \"Sign In\"}\r\n              </Button>\r\n              {console.log(props)}\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Typography>\r\n          <Link href=\"#\">Forgot password</Link>\r\n        </Typography>\r\n        <Typography>\r\n          Do You have an account?\r\n          <Link href=\"#\" onClick={() => handleChange(\"event\", 1)}>\r\n            {\" \"}\r\n            Sign Up\r\n          </Link>\r\n        </Typography>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nconst Singup = () => {\r\n  const paperstyle = { padding:20 , width: 300, margin: \"0 auto\" };\r\n  const headerstyle = { margin: 0 };\r\n  const avatarstyle = { backgroundColor: \"#22d222\" };\r\n  const genderstyle = { marginTop: 5 };\r\n  return (\r\n    <Grid>\r\n      <Paper  style={paperstyle}>\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarstyle}>\r\n            <AddCircleOutlineOutlinedIcon />\r\n          </Avatar>\r\n          <h2 style={headerstyle}>Sing up</h2>\r\n          <Typography variant=\"caption\">\r\n            Please fill this form to create an account\r\n          </Typography>\r\n        </Grid>\r\n        <form>\r\n          <TextField fullWidth label=\"Name\" />\r\n          <TextField fullWidth label=\"Email\" />\r\n          <FormControl component=\"fieldset\" style={genderstyle}>\r\n            <FormLabel component=\"legend\">Gender</FormLabel>\r\n            <RadioGroup\r\n              aria-label=\"gender\"\r\n              name=\"gender1\"\r\n              style={{ display: \"initial\" }}\r\n            >\r\n              <FormControlLabel\r\n                value=\"female\"\r\n                control={<Radio />}\r\n                label=\"Female\"\r\n              />\r\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <TextField fullWidth label=\"Phone Number\" />\r\n          <TextField fullWidth label=\"Password\" />\r\n          <TextField fullWidth label=\"Confirm Password\" />\r\n          <FormControlLabel\r\n            control={<Checkbox name=\"checkedA\" />}\r\n            label=\"I accept the terms and conditions\"\r\n          />\r\n\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            Sing Up\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Singup;\r\n","import React ,{useState} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Login from \"../component/login\";\r\nimport Singup from \"../component/singup\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst SignInOutContainer = () => {\r\n  const [value, setValue] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const paperstyle = {  width: 340, margin: \"20px auto\" };\r\n  function TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box >\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <Paper elevation={20} style={paperstyle}>\r\n        \r\n      <Tabs\r\n        value={value}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        onChange={handleChange}\r\n        aria-label=\"disabled tabs example\"\r\n      >\r\n        <Tab label=\"Sign In\" />        \r\n        <Tab label=\"Sign Up\" />\r\n      </Tabs>\r\n      <TabPanel value={value} index={0}>\r\n          <Login handleChange={handleChange} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n          <Singup/>\r\n      </TabPanel>\r\n      \r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SignInOutContainer;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport SignInOutContainer from \"./container\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SignInOutContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}